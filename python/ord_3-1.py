# 2 つの整数 a, b が与えられます。
# その差 b - a を求めてください。

# me ↓
v = input().split()
a = int(v[0])
b = int(v[1])

print(b - a)


# ans ↓
a, b = map(int, input().split())
print(b - a)

# うっわ。答えシンプルかよ！！！
# Pythonのmap()を使うと、イテラブル（リストやタプルなど）の
# すべての要素に組み込み関数やlambda（ラムダ式、無名関数）、defで定義した関数などを適用できる。
# ...らしい。


# 下記、コピペ。（ https://techplay.jp/column/617 ）

# map関数とはシーケンスの構成要素すべてに対して、ある関数の処理を行わせるという高階関数のことです。
# そしてPythonにおけるシーケンスとはオブジェクトを順番に処理するためのデータ構造を意味し、
# 複数ある値をひとかたまりとして格納した型になります。

# 例えば、
# 「number1=〇〇」「number2=〇〇」「number3=〇〇」と続く変数が多くある場合、
# シーケンス型の一種であるリストを使って「number_list=[〇〇,〇〇,〇〇,・・・」と書き換えることができ、
# その方がシンプルで記述もはやく済みます。

# map関数では、こうしたリストなどのオブジェクトに含まれる各要素に対して
# 何かしらの変換を加えて別のオブジェクトを生成させることができるようになります。
# 他の関数や手法で同様の処理を行わせることもできますが、
# map関数を使えば煩雑な処理をできるだけ少ない記述量で実現させられるというメリットがあります。

# また、多くの変数に対して同じような変換処理をさせるプログラムを書く必要がなくなるため、
# 手直しが必要になった場合でも対応が簡単になります。
# もちろん、正しい使い方をしなければ期待する結果は得られませんが、
# 扱い方を適切に理解することでPython上達に向けて一歩進むことができるようになるでしょう。


# map関数。学んで使ってみたい。